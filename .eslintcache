[{"/Users/petrsugar/git/coding_challenge/src/index.tsx":"1","/Users/petrsugar/git/coding_challenge/src/App.tsx":"2","/Users/petrsugar/git/coding_challenge/src/generator/index.ts":"3","/Users/petrsugar/git/coding_challenge/src/generator/constants/names.ts":"4","/Users/petrsugar/git/coding_challenge/src/constants/index.ts":"5","/Users/petrsugar/git/coding_challenge/src/components/Event.tsx":"6","/Users/petrsugar/git/coding_challenge/src/components/TimeLine/TimeLine.tsx":"7","/Users/petrsugar/git/coding_challenge/src/components/TimeLine/index.ts":"8","/Users/petrsugar/git/coding_challenge/src/contexts/SelectedTimeContext/index.ts":"9","/Users/petrsugar/git/coding_challenge/src/contexts/SelectedTimeContext/SelectedTimeContext.ts":"10","/Users/petrsugar/git/coding_challenge/src/contexts/EventsContext/EventsContext.tsx":"11","/Users/petrsugar/git/coding_challenge/src/contexts/SelectedTimeContext/SelectedTimeContextProvider.tsx":"12","/Users/petrsugar/git/coding_challenge/src/contexts/EventsContext/EventsContextProvider.tsx":"13","/Users/petrsugar/git/coding_challenge/src/components/SelectedTime/SelectedTime.tsx":"14","/Users/petrsugar/git/coding_challenge/src/utils/isIntervalFree.ts":"15","/Users/petrsugar/git/coding_challenge/src/components/ControlsBar/ControlsBar.tsx":"16","/Users/petrsugar/git/coding_challenge/src/generator/utils/calculateWidth.ts":"17","/Users/petrsugar/git/coding_challenge/src/components/ControlsBar/hooks/useControlBar.tsx":"18","/Users/petrsugar/git/coding_challenge/src/generator/utils/time.ts":"19","/Users/petrsugar/git/coding_challenge/src/generator/utils/randomInt.ts":"20","/Users/petrsugar/git/coding_challenge/src/generator/utils/generateGuid.ts":"21","/Users/petrsugar/git/coding_challenge/src/components/Loader.tsx":"22","/Users/petrsugar/git/ueni/ueni_challenge/src/index.tsx":"23","/Users/petrsugar/git/ueni/ueni_challenge/src/App.tsx":"24","/Users/petrsugar/git/ueni/ueni_challenge/src/components/Event.tsx":"25","/Users/petrsugar/git/ueni/ueni_challenge/src/components/Loader.tsx":"26","/Users/petrsugar/git/ueni/ueni_challenge/src/components/SelectedTime/SelectedTime.tsx":"27","/Users/petrsugar/git/ueni/ueni_challenge/src/components/ControlsBar/ControlsBar.tsx":"28","/Users/petrsugar/git/ueni/ueni_challenge/src/components/TimeLine/index.ts":"29","/Users/petrsugar/git/ueni/ueni_challenge/src/components/ControlsBar/hooks/useControlBar.tsx":"30","/Users/petrsugar/git/ueni/ueni_challenge/src/api/fetchEvents.ts":"31","/Users/petrsugar/git/ueni/ueni_challenge/src/constants/index.ts":"32","/Users/petrsugar/git/ueni/ueni_challenge/src/components/TimeLine/TimeLine.tsx":"33"},{"size":219,"mtime":1611829055933,"results":"34","hashOfConfig":"35"},{"size":1504,"mtime":1611834254512,"results":"36","hashOfConfig":"35"},{"size":1052,"mtime":1611830165605,"results":"37","hashOfConfig":"35"},{"size":982,"mtime":1610976427353,"results":"38","hashOfConfig":"35"},{"size":39,"mtime":1611829453640,"results":"39","hashOfConfig":"35"},{"size":1026,"mtime":1611830060868,"results":"40","hashOfConfig":"35"},{"size":1833,"mtime":1611829529473,"results":"41","hashOfConfig":"35"},{"size":37,"mtime":1611829469536,"results":"42","hashOfConfig":"35"},{"size":48,"mtime":1611736271245,"results":"43","hashOfConfig":"35"},{"size":429,"mtime":1611756398790,"results":"44","hashOfConfig":"35"},{"size":443,"mtime":1611825252668,"results":"45","hashOfConfig":"35"},{"size":938,"mtime":1611824345354,"results":"46","hashOfConfig":"35"},{"size":1445,"mtime":1611830350831,"results":"47","hashOfConfig":"35"},{"size":1458,"mtime":1611829453588,"results":"48","hashOfConfig":"35"},{"size":689,"mtime":1611829781591,"results":"49","hashOfConfig":"35"},{"size":2374,"mtime":1611829453588,"results":"50","hashOfConfig":"35"},{"size":298,"mtime":1611829867308,"results":"51","hashOfConfig":"35"},{"size":1292,"mtime":1611829360604,"results":"52","hashOfConfig":"35"},{"size":318,"mtime":1611829282687,"results":"53","hashOfConfig":"35"},{"size":137,"mtime":1611829453640,"results":"54","hashOfConfig":"35"},{"size":244,"mtime":1611829207835,"results":"55","hashOfConfig":"35"},{"size":912,"mtime":1611834195272,"results":"56","hashOfConfig":"35"},{"size":219,"mtime":1611829055933,"results":"57","hashOfConfig":"58"},{"size":715,"mtime":1611837195209,"results":"59","hashOfConfig":"58"},{"size":1026,"mtime":1611830060868,"results":"60","hashOfConfig":"58"},{"size":912,"mtime":1611834195272,"results":"61","hashOfConfig":"58"},{"size":1458,"mtime":1611829453588,"results":"62","hashOfConfig":"58"},{"size":2454,"mtime":1611837554411,"results":"63","hashOfConfig":"58"},{"size":37,"mtime":1611829469536,"results":"64","hashOfConfig":"58"},{"size":714,"mtime":1611837668562,"results":"65","hashOfConfig":"58"},{"size":180,"mtime":1611830517825,"results":"66","hashOfConfig":"58"},{"size":39,"mtime":1611829453640,"results":"67","hashOfConfig":"58"},{"size":1679,"mtime":1611838566346,"results":"68","hashOfConfig":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"6i0evy",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"swpuyp",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"143","messages":"144","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/petrsugar/git/coding_challenge/src/index.tsx",[],["145","146"],"/Users/petrsugar/git/coding_challenge/src/App.tsx",["147"],"import React, { useContext, useMemo } from 'react';\nimport { generateEvents } from './generator';\nimport Event from './components/Event'\nimport Timeline from './components/TimeLine';\nimport { withEventsProvider } from './contexts/EventsContext/EventsContextProvider';\nimport { withSelectedTimeContextProvider } from './contexts/SelectedTimeContext/SelectedTimeContextProvider';\nimport SelectedTime from './components/SelectedTime/SelectedTime';\nimport { DateTime } from 'luxon';\nimport EventsContext from './contexts/EventsContext/EventsContext';\nimport ControlsBar from './components/ControlsBar/ControlsBar';\nimport styled from 'styled-components';\nimport Loader from './components/Loader';\n\nconst Root = styled.div`\n  padding: 2rem;\n`;\n\nconst StyledControlBar = styled(ControlsBar)`\n  margin: 2rem 0;\n`;\n\nfunction App() {\n  const { events, loading } = useContext(EventsContext);\n  const timeLineStart = useMemo(() => DateTime.local().set({ minute: 0, hour: 0, second: 0, millisecond: 0 }), []);\n\n  return (\n    <Root className=\"App\">\n      <StyledControlBar timeLineStart={timeLineStart}/>      \n      <Timeline timeLineStart={timeLineStart}>        \n        <Loader loading={loading} />\n        <SelectedTime timeLineStart={timeLineStart} />\n        {\n          events.map(item => (\n            <Event key={item.id} item={item} timeLineStart={timeLineStart}/>\n          ))\n        }      \n      </Timeline>\n    </Root>\n  );\n}\n\nexport default withSelectedTimeContextProvider(withEventsProvider(App));\n","/Users/petrsugar/git/coding_challenge/src/generator/index.ts",[],"/Users/petrsugar/git/coding_challenge/src/generator/constants/names.ts",[],["148","149"],"/Users/petrsugar/git/coding_challenge/src/constants/index.ts",[],"/Users/petrsugar/git/coding_challenge/src/components/Event.tsx",["150","151"],"import { DateTime } from \"luxon\";\nimport styled from \"styled-components\"\nimport { MINUTE_TO_PIXEL_RATIO as MINUTE_TO_PIXEL_RATIO } from \"../constants\";\nimport { msToMin } from \"../generator/utils/time\";\nimport { TimeEvent } from \"../types/TimeEvent\";\n\ninterface Props {\n  timeLineStart: DateTime;\n  item: TimeEvent;\n}\n\nconst Root = styled.div<{ left: number, width: number }>`\n  position: absolute;\n  left: ${({left}) => left}px;\n  width: ${({width}) => width}px;\n  height: 80px;\n  border: 1px solid;\n  box-sizing: border-box;\n  top: 50%;\n  margin-top: -40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Event: React.FC<Props> = ({ timeLineStart, item }) => {\n  const { start, end, name } = item;\n\n  const left = DateTime.fromISO(start).diff(timeLineStart).as(\"minutes\") * MINUTE_TO_PIXEL_RATIO;\n  const width = DateTime.fromISO(end).diff(DateTime.fromISO(start)).as(\"minutes\") * MINUTE_TO_PIXEL_RATIO;\n\n  return (\n    <Root left={left} width={width}>{name}</Root>\n  )\n}\n\nexport default Event;","/Users/petrsugar/git/coding_challenge/src/components/TimeLine/TimeLine.tsx",["152","153","154"],"import React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\nimport EventsContext from '../../contexts/EventsContext/EventsContext';\nimport calculateWidth from '../../generator/utils/calculateWidth';\nimport { last, first } from 'lodash';\nimport SelectedTimeContext from '../../contexts/SelectedTimeContext';\nimport { DateTime } from 'luxon';\nimport { MINUTE_TO_PIXEL_RATIO } from '../../constants';\n\ninterface RootProps {\n  width: number;\n}\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-x: auto;\n`;\n\nconst Content = styled.div<RootProps>`\n  position: relative;\n  height: 100px;\n  background: #f0f0f0;\n  width: ${({width}) => width}px;\n`;\n\ninterface TimeLineProps {\n  timeLineStart: DateTime;\n}\n\nconst TimeLine: React.FC<TimeLineProps> = ({ children, timeLineStart }) => {\n  const { events } = useContext(EventsContext);\n  const selectedTime = useContext(SelectedTimeContext);\n  const width = calculateWidth(timeLineStart, DateTime.fromISO(last(events)?.end ?? \"\"));\n  const contentRef = useRef<HTMLDivElement| null>(null);\n  const rootRef = useRef<HTMLDivElement| null>(null);\n\n  const onClick = useCallback((e: React.MouseEvent) => {\n    const originalDuration = selectedTime.end.diff(selectedTime.start).as(\"minutes\");\n    const timeLineScreenOffset = contentRef.current!.getBoundingClientRect().left;\n    const clickTimeLineCoordinate = e.clientX - timeLineScreenOffset;\n    const newStart = timeLineStart.plus({ minutes: clickTimeLineCoordinate / MINUTE_TO_PIXEL_RATIO });\n\n    selectedTime.setStart(newStart);\n    selectedTime.setEnd(newStart.plus({ minutes: originalDuration }))\n  }, [])\n\n  return (\n    <Root ref={rootRef}>\n      <Content ref={contentRef} width={width} onClick={onClick}>{children}</Content>\n    </Root>\n  )\n}\n\nexport default TimeLine;","/Users/petrsugar/git/coding_challenge/src/components/TimeLine/index.ts",[],"/Users/petrsugar/git/coding_challenge/src/contexts/SelectedTimeContext/index.ts",[],"/Users/petrsugar/git/coding_challenge/src/contexts/SelectedTimeContext/SelectedTimeContext.ts",[],"/Users/petrsugar/git/coding_challenge/src/contexts/EventsContext/EventsContext.tsx",[],"/Users/petrsugar/git/coding_challenge/src/contexts/SelectedTimeContext/SelectedTimeContextProvider.tsx",[],"/Users/petrsugar/git/coding_challenge/src/contexts/EventsContext/EventsContextProvider.tsx",["155","156"],"import { useEffect, useMemo, useState } from \"react\";\nimport { generateEvents } from \"../../generator\";\nimport fetchEvents from \"../../services/fetchEvents\";\nimport { TimeEvent } from \"../../types/TimeEvent\";\nimport EventsContext, { EventsContextValue } from \"./EventsContext\";\n\nconst EventsContextProvider: React.FC = ({ children }) => {\n  const [nameFilter, setNameFilter] = useState<null | string>(null);\n  const [allEvents, setAllEvents] = useState<TimeEvent[]>([]);\n  const [loading, setLoading] = useState(false);\n  const organizers = useMemo(() => {\n    return Array.from(new Set<string>(allEvents.map(event => event.name)))\n  }, [allEvents]);\n\n  const value = useMemo<EventsContextValue>(() => ({\n    loading,\n    organizers,\n    events: nameFilter ? allEvents.filter(event => event.name === nameFilter) : allEvents,\n    filterEventsByName: setNameFilter,\n  }), [allEvents, nameFilter, loading, setNameFilter]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchEvents().then(events => {\n      setAllEvents(events.data)\n      setLoading(false);\n    })   \n  }, []);\n\n\n  return (\n    <EventsContext.Provider value={value}>{children}</EventsContext.Provider>\n  );\n}\n\nexport function withEventsProvider<P>(Component: React.ComponentType<P>): React.FC<P> {\n  return (props: P) => {\n    return (\n      <EventsContextProvider>\n        <Component {...props} />\n      </EventsContextProvider>\n    );\n  }\n}\n\nexport default EventsContextProvider;","/Users/petrsugar/git/coding_challenge/src/components/SelectedTime/SelectedTime.tsx",[],"/Users/petrsugar/git/coding_challenge/src/utils/isIntervalFree.ts",[],"/Users/petrsugar/git/coding_challenge/src/components/ControlsBar/ControlsBar.tsx",["157","158","159"],"import { Button, FormControl, InputLabel, MenuItem } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport { DateTime } from 'luxon';\nimport React, { HTMLAttributes, useCallback, useContext } from 'react'\nimport styled from 'styled-components';\nimport useControlsBar from './hooks/useControlBar';\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport { isEmpty } from 'lodash';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledOrganizerField = styled(FormControl)`\n  && {\n    min-width: 200px;\n  }\n`;\n\nconst StyledDateTimeFormControl = styled(FormControl)`\n  && {\n    min-width: 200px;\n\n    .MuiFormLabel-root {\n      flex: 1;\n      position: relative;\n    }\n\n    input {\n      border: none;\n      border-bottom: 1px solid;\n      padding-bottom: 6px;\n    }\n  }\n`;\n\nconst StyledResetButton = styled(Button)`\n  && {\n    margin-left: 1rem;\n  }\n`;\n\ninterface ControlBarProps extends HTMLAttributes<HTMLDivElement> {\n  timeLineStart: DateTime;\n}\n\nconst ControlsBar: React.FC<ControlBarProps> = ({ timeLineStart, ...props }) => {\n  const { start, end, nameFilterOptions, nameFilterValue, onEndChange, onFilterChange, onStartChange } = useControlsBar(timeLineStart);\n\n  return (\n    <Root {...props}>\n      <StyledDateTimeFormControl>\n        <InputLabel shrink>Start</InputLabel>\n        <Datetime\n          value={start.toJSDate()}\n          onChange={onStartChange}\n        />\n      </StyledDateTimeFormControl>\n\n      <StyledDateTimeFormControl>\n        <InputLabel shrink>End</InputLabel>\n        <Datetime\n          value={end.toJSDate()}\n          onChange={onEndChange}\n        />\n      </StyledDateTimeFormControl>\n\n      <StyledOrganizerField>\n        <InputLabel shrink>Organizer</InputLabel>\n        <Select\n          value={nameFilterValue}\n          onChange={(e) => { onFilterChange(e.target.value as string)}}\n        >\n          {nameFilterOptions.map((name) => <MenuItem key={name} value={name}>{name}</MenuItem>)}\n        </Select>\n      </StyledOrganizerField>\n      \n      { !isEmpty(nameFilterValue) ? <StyledResetButton variant=\"contained\" color={\"primary\"} onClick={() => onFilterChange(null)}>Delete filter</StyledResetButton> : null}\n    </Root>\n  )\n}\n\nexport default ControlsBar\n","/Users/petrsugar/git/coding_challenge/src/generator/utils/calculateWidth.ts",[],"/Users/petrsugar/git/coding_challenge/src/components/ControlsBar/hooks/useControlBar.tsx",["160","161","162","163"],"import { isEmpty, last } from \"lodash\";\nimport { DateTime } from \"luxon\";\nimport { Moment } from \"moment\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport EventsContext from \"../../../contexts/EventsContext/EventsContext\";\nimport SelectedTimeContext from \"../../../contexts/SelectedTimeContext\";\n\nfunction useControlsBar(timeLineStart: DateTime) {\n  const [nameFilterValue, setNameFilterValue] = useState<string | null>(null);\n  const { filterEventsByName, organizers } = useContext(EventsContext);\n  const { setEnd, setStart, start, end } = useContext(SelectedTimeContext);\n\n  const onStartChange = useCallback((value: Moment | string) => {\n    setStart(DateTime.fromISO((value as Moment).toISOString()));\n  }, []);\n\n  const onEndChange = useCallback((value: Moment | string) => {\n    setEnd(DateTime.fromISO((value as Moment).toISOString()));\n  }, []);\n\n  const onFilterChange = useCallback((value: string | null) => {\n    setNameFilterValue(value);\n  }, []);\n\n  useEffect(() => {\n    filterEventsByName(isEmpty(nameFilterValue) ? null : nameFilterValue);\n  }, [nameFilterValue]);\n\n  return {\n    start,\n    end,\n    nameFilterValue,\n    nameFilterOptions: organizers,\n    onStartChange,\n    onEndChange,\n    onFilterChange\n  }\n}\n\nexport default useControlsBar;","/Users/petrsugar/git/coding_challenge/src/generator/utils/time.ts",[],"/Users/petrsugar/git/coding_challenge/src/generator/utils/randomInt.ts",[],"/Users/petrsugar/git/coding_challenge/src/generator/utils/generateGuid.ts",[],"/Users/petrsugar/git/coding_challenge/src/components/Loader.tsx",[],"/Users/petrsugar/git/ueni/ueni_challenge/src/index.tsx",[],["164","165"],"/Users/petrsugar/git/ueni/ueni_challenge/src/App.tsx",[],"/Users/petrsugar/git/ueni/ueni_challenge/src/components/Event.tsx",["166","167"],["168","169"],"/Users/petrsugar/git/ueni/ueni_challenge/src/components/Loader.tsx",[],"/Users/petrsugar/git/ueni/ueni_challenge/src/components/SelectedTime/SelectedTime.tsx",[],"/Users/petrsugar/git/ueni/ueni_challenge/src/components/ControlsBar/ControlsBar.tsx",["170","171","172"],"/Users/petrsugar/git/ueni/ueni_challenge/src/components/TimeLine/index.ts",[],"/Users/petrsugar/git/ueni/ueni_challenge/src/components/ControlsBar/hooks/useControlBar.tsx",["173","174","175","176","177","178","179","180","181"],"/Users/petrsugar/git/ueni/ueni_challenge/src/api/fetchEvents.ts",[],"/Users/petrsugar/git/ueni/ueni_challenge/src/constants/index.ts",[],"/Users/petrsugar/git/ueni/ueni_challenge/src/components/TimeLine/TimeLine.tsx",["182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"183","replacedBy":"191"},{"ruleId":"185","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":56,"fix":"197"},{"ruleId":"187","severity":1,"message":"198","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":17},{"ruleId":"187","severity":1,"message":"199","line":1,"column":42,"nodeType":"189","messageId":"190","endLine":1,"endColumn":49},{"ruleId":"187","severity":1,"message":"200","line":5,"column":16,"nodeType":"189","messageId":"190","endLine":5,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":46,"column":6,"nodeType":"203","endLine":46,"endColumn":8,"suggestions":"204"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"201","severity":1,"message":"205","line":20,"column":7,"nodeType":"203","endLine":20,"endColumn":54,"suggestions":"206"},{"ruleId":"187","severity":1,"message":"207","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":17},{"ruleId":"187","severity":1,"message":"208","line":5,"column":33,"nodeType":"189","messageId":"190","endLine":5,"endColumn":44},{"ruleId":"187","severity":1,"message":"209","line":5,"column":46,"nodeType":"189","messageId":"190","endLine":5,"endColumn":56},{"ruleId":"187","severity":1,"message":"210","line":1,"column":19,"nodeType":"189","messageId":"190","endLine":1,"endColumn":23},{"ruleId":"201","severity":1,"message":"211","line":15,"column":6,"nodeType":"203","endLine":15,"endColumn":8,"suggestions":"212"},{"ruleId":"201","severity":1,"message":"213","line":19,"column":6,"nodeType":"203","endLine":19,"endColumn":8,"suggestions":"214"},{"ruleId":"201","severity":1,"message":"215","line":27,"column":6,"nodeType":"203","endLine":27,"endColumn":23,"suggestions":"216"},{"ruleId":"183","replacedBy":"217"},{"ruleId":"185","replacedBy":"218"},{"ruleId":"193","severity":1,"message":"194","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":56,"fix":"219"},{"ruleId":"187","severity":1,"message":"198","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":17},{"ruleId":"183","replacedBy":"220"},{"ruleId":"185","replacedBy":"221"},{"ruleId":"187","severity":1,"message":"207","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":17},{"ruleId":"187","severity":1,"message":"208","line":5,"column":33,"nodeType":"189","messageId":"190","endLine":5,"endColumn":44},{"ruleId":"187","severity":1,"message":"209","line":5,"column":46,"nodeType":"189","messageId":"190","endLine":5,"endColumn":56},{"ruleId":"187","severity":1,"message":"222","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":17},{"ruleId":"187","severity":1,"message":"210","line":1,"column":19,"nodeType":"189","messageId":"190","endLine":1,"endColumn":23},{"ruleId":"187","severity":1,"message":"223","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":13},{"ruleId":"187","severity":1,"message":"208","line":4,"column":17,"nodeType":"189","messageId":"190","endLine":4,"endColumn":28},{"ruleId":"187","severity":1,"message":"209","line":4,"column":30,"nodeType":"189","messageId":"190","endLine":4,"endColumn":40},{"ruleId":"187","severity":1,"message":"224","line":4,"column":42,"nodeType":"189","messageId":"190","endLine":4,"endColumn":51},{"ruleId":"187","severity":1,"message":"225","line":4,"column":53,"nodeType":"189","messageId":"190","endLine":4,"endColumn":61},{"ruleId":"187","severity":1,"message":"226","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"227","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":27},{"ruleId":null,"fatal":true,"severity":2,"message":"228","line":33,"column":2},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"@typescript-eslint/no-unused-vars","'generateEvents' is defined but never used.","Identifier","unusedVar",["229"],["230"],"no-useless-rename","Import MINUTE_TO_PIXEL_RATIO unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"231","text":"232"},"'msToMin' is defined but never used.","'useMemo' is defined but never used.","'first' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'selectedTime' and 'timeLineStart'. Either include them or remove the dependency array.","ArrayExpression",["233"],"React Hook useMemo has a missing dependency: 'organizers'. Either include it or remove the dependency array.",["234"],"'TextField' is defined but never used.","'useCallback' is defined but never used.","'useContext' is defined but never used.","'last' is defined but never used.","React Hook useCallback has a missing dependency: 'setStart'. Either include it or remove the dependency array.",["235"],"React Hook useCallback has a missing dependency: 'setEnd'. Either include it or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'filterEventsByName'. Either include it or remove the dependency array.",["237"],["229"],["230"],{"range":"238","text":"232"},["229"],["230"],"'isEmpty' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'EventsContext' is defined but never used.","'SelectedTimeContext' is defined but never used.","Parsing error: Expression expected.","no-global-assign","no-unsafe-negation",[82,128],"MINUTE_TO_PIXEL_RATIO",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},[82,128],"Update the dependencies array to be: [selectedTime, timeLineStart]",{"range":"249","text":"250"},"Update the dependencies array to be: [loading, organizers, nameFilter, allEvents]",{"range":"251","text":"252"},"Update the dependencies array to be: [setStart]",{"range":"253","text":"254"},"Update the dependencies array to be: [setEnd]",{"range":"255","text":"256"},"Update the dependencies array to be: [filterEventsByName, nameFilterValue]",{"range":"257","text":"258"},[1664,1666],"[selectedTime, timeLineStart]",[870,917],"[loading, organizers, nameFilter, allEvents]",[741,743],"[setStart]",[879,881],"[setEnd]",[1092,1109],"[filterEventsByName, nameFilterValue]"]