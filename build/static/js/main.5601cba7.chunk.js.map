{"version":3,"sources":["utils/index.ts","constants/index.ts","components/TimeLine/utils/index.ts","state/reducer.ts","state/store.tsx","api/fetchEvents.ts","components/Loader.tsx","components/Event.tsx","components/SelectedTime/SelectedTime.tsx","components/TimeLine/TimeLine.tsx","components/ControlsBar/hooks/useControlBar.tsx","components/ControlsBar/ControlsBar.tsx","App.tsx","index.tsx"],"names":["calculateLeftValue","timeLineStart","selectedStart","diff","as","calculateWidthValue","selectedEnd","res","isNaN","isIntervalFree","events","intervalStart","intervalEnd","length","middle","Math","trunc","event","eventStart","DateTime","fromISO","start","eventEnd","end","slice","calculateNewInterval","originalStart","originalEnd","timeLineElement","clickPageXCoordinate","originalDuration","clickTimeLineCoordinate","getBoundingClientRect","left","plus","minutes","reducer","state","action","type","value","filteredEvents","data","filterOptions","options","defaultState","dispatch","local","Context","createContext","Store","children","useReducer","Provider","fetchEvents","axios","get","process","Root","styled","div","Loader","loading","opacity","inline","style","background","undefined","minHeight","minWidth","position","CircularProgress","width","Event","item","name","free","SelectedTime","useContext","Content","TimeLine","contentRef","useRef","calculateWidth","last","useState","setLoading","onClick","useCallback","e","current","clientX","useEffect","a","axiosResponse","status","uniq","map","alert","getEvents","ref","id","useControlsBar","nameFilterValue","setNameFilterValue","nameFilterOptions","onStartChange","toISOString","onEndChange","onFilterChange","filter","StyledOrganizerField","FormControl","StyledDateTimeFormControl","StyledResetButton","Button","ControlsBar","props","InputLabel","shrink","toJSDate","onChange","Select","target","MenuItem","isEmpty","variant","color","StyledControlBar","App","useMemo","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5601cba7.chunk.js","sourcesContent":["import { MINUTE_TO_PIXEL_RATIO } from '../constants';\nimport { DateTime } from 'luxon';\nimport { TimeEvent } from '../types/TimeEvent';\nimport { isNaN } from 'lodash';\n\nexport function calculateLeftValue(timeLineStart: DateTime, selectedStart: DateTime) {\n  return selectedStart.diff(timeLineStart).as('minutes') * MINUTE_TO_PIXEL_RATIO;\n}\n\n/**\n *\n * @param selectedStart Start time on the TimeLine.\n * @param selectedEnd End time on the TimeLine. For calculating the width of the TimeLine component, set this to the current local time. For Events or Selected Intervals, use their end time.\n * @returns Width in pixels on the TimeLine component of the start time to end time provided.\n */\nexport function calculateWidthValue(selectedStart: DateTime, selectedEnd: DateTime): number {\n  const res = selectedEnd.diff(selectedStart).as('minutes') * MINUTE_TO_PIXEL_RATIO;\n  return isNaN(res) ? 100 : res;\n}\n\nexport function isIntervalFree(events: TimeEvent[], intervalStart: DateTime, intervalEnd: DateTime): boolean {\n  // TODO: implement the algorithm. You can rely on events being sorted.\n\n  /**\n  O(n) solution\n  for (const event of events) {\n    const eventStart = DateTime.fromISO(event.start);\n    const eventEnd = DateTime.fromISO(event.end);\n    if (intervalStart >= eventStart && intervalStart <= eventEnd) return false;\n    if (intervalEnd >= eventStart && intervalEnd <= eventEnd) return false;\n    if (intervalStart <= eventStart && intervalEnd >= eventEnd) return false;\n  }\n  return true;\n  **/\n\n  //O(log(n)) solution with binary search, taking advantage of ordering\n  if (events.length === 0) return true;\n\n  const middle = Math.trunc((events.length - 1) / 2);\n  const event = events[middle];\n  const eventStart = DateTime.fromISO(event.start);\n  const eventEnd = DateTime.fromISO(event.end);\n\n  if (intervalStart >= eventStart && intervalStart <= eventEnd) {\n    return false;\n  } else if (intervalEnd >= eventStart && intervalEnd <= eventEnd) {\n    return false;\n  } else if (intervalStart <= eventStart && intervalEnd >= eventEnd) {\n    return false;\n  }\n\n  if (eventStart > intervalEnd) {\n    return isIntervalFree(events.slice(0, middle), intervalStart, intervalEnd);\n  }\n  if (intervalStart > eventEnd) {\n    return isIntervalFree(events.slice(middle + 1, events.length), intervalStart, intervalEnd);\n  }\n  return true;\n}\n","export const MINUTE_TO_PIXEL_RATIO = 1;","import { DateTime } from 'luxon';\nimport { MINUTE_TO_PIXEL_RATIO } from '../../../constants';\n\ninterface Response {\n  start: DateTime;\n  end: DateTime;\n}\n\n/**\n *\n * @param timeLineStart Time of day when timeline starts\n * @param originalStart Start time of last selected interval\n * @param originalEnd End time of last selected interval\n * @param timeLineElement HTML DOM Element corresponding to the TimeLine component\n * @param clickPageXCoordinate x coordinate value of mouse click. Not corrected for TimeLine component's left offset.\n * @returns\n */\nexport function calculateNewInterval(\n  timeLineStart: DateTime,\n  originalStart: DateTime,\n  originalEnd: DateTime,\n  timeLineElement: HTMLDivElement,\n  clickPageXCoordinate: number,\n): Response {\n  const originalDuration = originalEnd.diff(originalStart).as('minutes');\n  const timeLineScreenOffset = timeLineElement.getBoundingClientRect().left;\n  const clickTimeLineCoordinate = clickPageXCoordinate - timeLineScreenOffset;\n  const start = timeLineStart.plus({ minutes: clickTimeLineCoordinate / MINUTE_TO_PIXEL_RATIO });\n\n  return {\n    start,\n    end: start.plus({ minutes: originalDuration }),\n  };\n}\n\nexport default calculateNewInterval;\n","import { DateTime } from 'luxon';\nimport { Dispatch } from 'react';\nimport { TimeEvent } from '../types/TimeEvent';\n\nexport type SET_EVENTS = { type: 'SET_EVENTS'; value: TimeEvent[] };\nexport type SET_START = { type: 'SET_START'; value: DateTime };\nexport type SET_END = { type: 'SET_END'; value: DateTime };\nexport type SET_FILTERED_EVENTS = { type: 'SET_FILTERED_EVENTS'; value: TimeEvent[] };\nexport type SET_EVENTS_AND_FILTERED = { type: 'INIT_STORE'; value: { data: TimeEvent[]; options: string[] } };\n\nexport type Actions = SET_EVENTS | SET_START | SET_END | SET_FILTERED_EVENTS | SET_EVENTS_AND_FILTERED;\n\nexport type State = {\n  events: TimeEvent[];\n  dispatch: Dispatch<Actions>;\n  selectedStart: DateTime;\n  selectedEnd: DateTime;\n  filteredEvents: TimeEvent[];\n  filterOptions: string[];\n};\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'SET_EVENTS':\n      return {\n        ...state,\n        events: action.value,\n      };\n    case 'SET_START':\n      return {\n        ...state,\n        selectedStart: action.value,\n      };\n    case 'SET_END':\n      return {\n        ...state,\n        selectedEnd: action.value,\n      };\n    case 'SET_FILTERED_EVENTS':\n      return {\n        ...state,\n        filteredEvents: action.value,\n      };\n    case 'INIT_STORE':\n      return {\n        ...state,\n        events: action.value.data,\n        filteredEvents: action.value.data,\n        filterOptions: action.value.options,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { DateTime } from 'luxon';\nimport React, { createContext, useReducer } from 'react';\nimport reducer, { State } from './reducer';\n\nconst defaultState: State = {\n  events: [],\n  dispatch: () => {},\n  selectedStart: DateTime.local(),\n  selectedEnd: DateTime.local().plus({ minutes: 180 }),\n  filteredEvents: [],\n  filterOptions: [],\n};\n\nexport const Context = createContext(defaultState);\n\nconst Store: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  return <Context.Provider value={{ ...state, dispatch: dispatch }}>{children}</Context.Provider>;\n};\n\nexport default Store;\n","import axios from 'axios';\nimport { TimeEvent } from '../types/TimeEvent';\n\nfunction fetchEvents() {\n  return axios.get<TimeEvent[]>(`${process.env.PUBLIC_URL}/events.json`);\n}\n\nexport default fetchEvents;\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as React from \"react\";\nimport { CSSProperties } from \"react\";\nimport styled from \"styled-components\";\n\ninterface LoaderProps {\n\tloading: boolean;\n\topacity?: number;\n\tinline?: boolean;\n}\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 4;\n`;\n\nconst Loader: React.FC<LoaderProps> = ({ loading, opacity, inline = false }) => {\n  if (!loading) return null;\n  \n  const style = {\n    background: opacity ? `rgba(255, 255, 255, ${opacity})` : undefined,\n    minHeight: inline ? \"10rem\" : undefined,\n    minWidth: inline ? \"10rem\" : undefined,\n    position: inline ? \"relative\" : undefined,\n  } as CSSProperties;\n\n  return (\n    <Root style={style}>\n      <CircularProgress />\n    </Root>\n  );\n};\n\nexport default Loader;\n","import { DateTime } from 'luxon';\nimport styled from 'styled-components';\nimport { TimeEvent } from '../types/TimeEvent';\nimport { calculateLeftValue, calculateWidthValue } from '../utils';\n\ninterface Props {\n  timeLineStart: DateTime;\n  item: TimeEvent;\n}\n\nconst Root = styled.div<{ left: number; width: number }>`\n  position: absolute;\n  left: ${({ left }) => left}px;\n  width: ${({ width }) => width}px;\n  height: 80px;\n  border: 1px solid;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Event: React.FC<Props> = ({ timeLineStart, item }) => {\n  const { start, end, name } = item;\n\n  const left = calculateLeftValue(timeLineStart, DateTime.fromISO(start));\n  const width = calculateWidthValue(DateTime.fromISO(start), DateTime.fromISO(end));\n\n  return (\n    <Root left={left} width={width}>\n      {name}\n    </Root>\n  );\n};\n\nexport default Event;\n","import { DateTime } from 'luxon';\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Context } from '../../state/store';\nimport { calculateLeftValue, calculateWidthValue, isIntervalFree } from '../../utils';\n\ninterface RootProps {\n  left: number;\n  width: number;\n  free: boolean;\n}\n\nconst Root = styled.div<RootProps>`\n  position: absolute;\n  height: 100%;\n  border-left: 5px solid #585858;\n  border-right: 5px solid #585858;\n  width: ${({ width }) => width}px;\n  left: ${({ left }) => left}px;\n  background: ${({ free }) => (free ? '#4CAF50' : '#f44336b8')};\n  z-index: 1;\n  transition: all 170ms ease-in;\n  box-sizing: border-box;\n`;\n\ninterface SelectedTimeProps {\n  timeLineStart: DateTime;\n}\n\nconst SelectedTime: React.FC<SelectedTimeProps> = ({ timeLineStart }) => {\n  const { events, selectedStart, selectedEnd } = useContext(Context);\n\n  const left = calculateLeftValue(timeLineStart, selectedStart);\n  const width = calculateWidthValue(selectedStart, selectedEnd);\n  const free = isIntervalFree(events, selectedStart, selectedEnd);\n\n  return <Root left={left} width={width} free={free} />;\n};\n\nexport default SelectedTime;\n","import React, { useCallback, useContext, useRef, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { calculateWidthValue as calculateWidth } from '../../utils';\nimport { last, map, uniq } from 'lodash';\nimport { DateTime } from 'luxon';\nimport calculateNewInterval from './utils';\nimport { Context } from '../../state/store';\nimport fetchEvents from '../../api/fetchEvents';\nimport Loader from '../Loader';\nimport Event from '../Event';\nimport SelectedTime from '../SelectedTime';\n\ninterface RootProps {\n  width: number;\n}\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-x: auto;\n`;\n\nconst Content = styled.div<RootProps>`\n  position: relative;\n  height: 100px;\n  background: #f0f0f0;\n  width: ${({ width }) => width}px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\ninterface TimeLineProps {\n  /**\n   * Time of the day from which first event displayed on the TimeLine can start. Defaults to 00:00:00:00 local time.\n   */\n  timeLineStart: DateTime;\n}\n\nconst TimeLine: React.FC<TimeLineProps> = ({ children, timeLineStart }) => {\n  const { events, selectedStart, selectedEnd, filteredEvents, dispatch } = useContext(Context);\n\n  const contentRef = useRef<HTMLDivElement | null>(null);\n  const width = calculateWidth(timeLineStart, DateTime.fromISO(last(events)?.end ?? ''));\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const onClick = useCallback(\n    (e: React.MouseEvent) => {\n      const { start, end } = calculateNewInterval(\n        timeLineStart,\n        selectedStart,\n        selectedEnd,\n        contentRef.current!,\n        e.clientX,\n      );\n\n      dispatch({ type: 'SET_END', value: end });\n      dispatch({ type: 'SET_START', value: start });\n    },\n    [selectedStart, selectedEnd, dispatch, timeLineStart],\n  );\n\n  useEffect(() => {\n    async function getEvents() {\n      const axiosResponse = await fetchEvents();\n      if (axiosResponse.status === 200) {\n        dispatch({\n          type: 'INIT_STORE',\n          value: { data: axiosResponse.data, options: uniq(map(axiosResponse.data, 'name')) },\n        });\n      } else {\n        alert('mock error handling');\n      }\n      setLoading(false);\n    }\n    getEvents();\n  }, []);\n\n  return (\n    <Root>\n      <Content ref={contentRef} width={width} onClick={onClick}>\n        <Loader loading={loading} />\n        {!loading &&\n          filteredEvents.map((event) => {\n            return <Event key={event.id} timeLineStart={timeLineStart} item={event}></Event>;\n          })}\n        {!loading && <SelectedTime timeLineStart={timeLineStart}></SelectedTime>}\n      </Content>\n    </Root>\n  );\n};\n\nexport default TimeLine;\n","import { map, uniq } from 'lodash';\nimport { DateTime } from 'luxon';\nimport { Moment } from 'moment';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport { Context } from '../../../state/store';\ninterface Response {\n  start: DateTime;\n  end: DateTime;\n  nameFilterValue: null | string;\n  nameFilterOptions: Array<string>;\n  /**Accepts strings in ISO format */\n  onStartChange: (value: Moment | string) => void;\n  /**Accepts strings in ISO format */\n  onEndChange: (value: Moment | string) => void;\n  /**Accepts strings in ISO format */\n  onFilterChange: (value: string | null) => void;\n}\n\nfunction useControlsBar(): Response {\n  const [nameFilterValue, setNameFilterValue] = useState<Response['nameFilterValue']>('');\n\n  const { events, selectedStart, selectedEnd, filterOptions, dispatch } = useContext(Context);\n\n  const onStartChange: Response['onStartChange'] = (value) => {\n    if (typeof value === 'string') {\n      dispatch({ type: 'SET_START', value: DateTime.fromISO(value) });\n    } else {\n      dispatch({ type: 'SET_START', value: DateTime.fromISO(value.toISOString()) });\n    }\n  };\n\n  const onEndChange: Response['onEndChange'] = (value) => {\n    if (typeof value === 'string') {\n      dispatch({ type: 'SET_END', value: DateTime.fromISO(value) });\n    } else {\n      dispatch({ type: 'SET_END', value: DateTime.fromISO(value.toISOString()) });\n    }\n  };\n\n  const onFilterChange: Response['onFilterChange'] = (value) => {\n    if (value === null) {\n      setNameFilterValue('');\n      dispatch({ type: 'SET_FILTERED_EVENTS', value: events });\n    } else {\n      dispatch({ type: 'SET_FILTERED_EVENTS', value: events.filter((event) => event.name === value) });\n      setNameFilterValue(value);\n    }\n  };\n\n  return {\n    start: selectedStart,\n    end: selectedEnd,\n    nameFilterValue,\n    nameFilterOptions: filterOptions,\n    onStartChange,\n    onEndChange,\n    onFilterChange,\n  };\n}\n\nexport default useControlsBar;\n","import { Button, FormControl, InputLabel, MenuItem } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport { DateTime } from 'luxon';\nimport React, { HTMLAttributes } from 'react';\nimport styled from 'styled-components';\nimport useControlsBar from './hooks/useControlBar';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport { isEmpty } from 'lodash';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledOrganizerField = styled(FormControl)`\n  && {\n    min-width: 200px;\n  }\n`;\n\nconst StyledDateTimeFormControl = styled(FormControl)`\n  && {\n    min-width: 200px;\n\n    .MuiFormLabel-root {\n      flex: 1;\n      position: relative;\n    }\n\n    input {\n      border: none;\n      border-bottom: 1px solid;\n      padding-bottom: 6px;\n    }\n  }\n`;\n\nconst StyledResetButton = styled(Button)`\n  && {\n    margin-left: 1rem;\n  }\n`;\n\ninterface ControlBarProps extends HTMLAttributes<HTMLDivElement> {\n  timeLineStart: DateTime;\n}\n\nconst ControlsBar: React.FC<ControlBarProps> = ({ timeLineStart, ...props }) => {\n  const { start, end, nameFilterOptions, nameFilterValue, onEndChange, onFilterChange, onStartChange } =\n    useControlsBar();\n\n  return (\n    <Root {...props}>\n      <StyledDateTimeFormControl>\n        <InputLabel shrink>Start</InputLabel>\n        <Datetime value={start.toJSDate()} onChange={onStartChange} />\n      </StyledDateTimeFormControl>\n\n      <StyledDateTimeFormControl>\n        <InputLabel shrink>End</InputLabel>\n        <Datetime value={end.toJSDate()} onChange={onEndChange} />\n      </StyledDateTimeFormControl>\n\n      <StyledOrganizerField>\n        <InputLabel shrink>Organizer</InputLabel>\n        <Select\n          value={nameFilterValue}\n          onChange={(e) => {\n            onFilterChange(e.target.value as string);\n          }}\n        >\n          {nameFilterOptions.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </StyledOrganizerField>\n\n      {!isEmpty(nameFilterValue) ? (\n        <StyledResetButton variant=\"contained\" color={'primary'} onClick={() => onFilterChange(null)}>\n          Delete filter\n        </StyledResetButton>\n      ) : null}\n    </Root>\n  );\n};\n\nexport default ControlsBar;\n","import { useMemo } from 'react';\nimport Timeline from './components/TimeLine';\nimport { DateTime } from 'luxon';\nimport ControlsBar from './components/ControlsBar/ControlsBar';\nimport styled from 'styled-components';\nimport Store from './state/store';\n\nconst Root = styled.div`\n  padding: 2rem;\n`;\n\nconst StyledControlBar = styled(ControlsBar)`\n  margin: 2rem 0;\n`;\n\nfunction App() {\n  const timeLineStart = useMemo(() => DateTime.local(), []);\n\n  return (\n    <Root className=\"App\">\n      <Store>\n        <StyledControlBar timeLineStart={timeLineStart} />\n        <Timeline timeLineStart={timeLineStart}></Timeline>\n      </Store>\n    </Root>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}