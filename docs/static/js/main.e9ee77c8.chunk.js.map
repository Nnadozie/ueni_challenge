{"version":3,"sources":["utils/index.ts","constants/index.ts","components/Event.tsx","contexts/EventsContext/EventsContext.tsx","generator/utils/calculateWidth.ts","contexts/SelectedTimeContext/SelectedTimeContext.ts","components/TimeLine/utils/index.ts","components/TimeLine/TimeLine.tsx","api/fetchEvents.ts","contexts/EventsContext/EventsContextProvider.tsx","contexts/SelectedTimeContext/SelectedTimeContextProvider.tsx","components/SelectedTime/SelectedTime.tsx","components/ControlsBar/hooks/useControlBar.tsx","components/ControlsBar/ControlsBar.tsx","components/Loader.tsx","App.tsx","index.tsx"],"names":["calculateLeftValue","timeLineStart","selectedStart","diff","as","calculateWidthValue","selectedEnd","Root","styled","div","left","width","Event","item","start","end","name","DateTime","fromISO","EventsContext","React","createContext","events","organizers","loading","filterEventsByName","calculateWidth","SelectedTimeContext","local","setStart","setEnd","calculateNewInterval","originalStart","originalEnd","timeLineElement","clickPageXCoordinate","originalDuration","clickTimeLineCoordinate","getBoundingClientRect","plus","minutes","Content","TimeLine","children","useContext","selectedTime","last","contentRef","useRef","onClick","useCallback","e","current","clientX","ref","fetchEvents","axios","get","process","EventsContextProvider","useState","nameFilter","setNameFilter","allEvents","setAllEvents","setLoading","useMemo","Array","from","Set","map","event","value","filter","useEffect","then","data","Provider","SelectedTimeContextProvider","hours","free","SelectedTime","eventsContext","selectedTimeContext","intervalStart","intervalEnd","toMillis","eventStart","eventEnd","isIntervalFree","useControlsBar","nameFilterValue","setNameFilterValue","onStartChange","toISOString","onEndChange","onFilterChange","isEmpty","nameFilterOptions","StyledOrganizerField","FormControl","StyledDateTimeFormControl","StyledResetButton","Button","ControlsBar","props","InputLabel","shrink","toJSDate","onChange","Select","target","MenuItem","variant","color","Loader","opacity","inline","style","background","undefined","minHeight","minWidth","position","CircularProgress","StyledControlBar","withSelectedTimeContextProvider","Component","set","minute","hour","second","millisecond","className","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9ee77c8.chunk.js","sourcesContent":["import { MINUTE_TO_PIXEL_RATIO } from \"../constants\";\nimport { DateTime } from \"luxon\";\nimport { TimeEvent } from \"../types/TimeEvent\";\n\nexport function calculateLeftValue(timeLineStart: DateTime, selectedStart: DateTime) {\n    return selectedStart.diff(timeLineStart).as(\"minutes\") * MINUTE_TO_PIXEL_RATIO\n}\n\nexport function calculateWidthValue(selectedStart: DateTime, selectedEnd: DateTime) {\n    return selectedEnd.diff(selectedStart).as(\"minutes\") * MINUTE_TO_PIXEL_RATIO;\n}\n\nexport function isIntervalFree(events: TimeEvent[], intervalStart: DateTime, intervalEnd: DateTime): boolean {\n  for(let event of events) {\n    const start = intervalStart.toMillis();\n    const end = intervalEnd.toMillis();\n\n    const eventStart = DateTime.fromISO(event.start).toMillis();\n    const eventEnd = DateTime.fromISO(event.end).toMillis();\n\n    if(eventStart < start && eventEnd > end) return false;\n    if(eventStart >= start && eventStart <= end) return false;\n    if(eventEnd <= end && eventEnd > start) return false;\n\n    if(eventEnd > end) return true;\n  }\n\n  return true;\n}\n","export const MINUTE_TO_PIXEL_RATIO = 1;","import { DateTime } from \"luxon\";\nimport styled from \"styled-components\"\nimport { MINUTE_TO_PIXEL_RATIO as MINUTE_TO_PIXEL_RATIO } from \"../constants\";\nimport { msToMin } from \"../generator/utils/time\";\nimport { TimeEvent } from \"../types/TimeEvent\";\nimport { calculateLeftValue, calculateWidthValue } from \"../utils\";\n\ninterface Props {\n  timeLineStart: DateTime;\n  item: TimeEvent;\n}\n\nconst Root = styled.div<{ left: number, width: number }>`\n  position: absolute;\n  left: ${({left}) => left}px;\n  width: ${({width}) => width}px;\n  height: 80px;\n  border: 1px solid;\n  box-sizing: border-box;\n  top: 50%;\n  margin-top: -40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Event: React.FC<Props> = ({ timeLineStart, item }) => {\n  const { start, end, name } = item;\n\n  const left = calculateLeftValue(timeLineStart, DateTime.fromISO(start))\n  const width = calculateWidthValue(DateTime.fromISO(start), DateTime.fromISO(end))\n\n  return (\n    <Root left={left} width={width}>{name}</Root>\n  )\n}\n\nexport default Event;","import React from \"react\";\nimport { TimeEvent } from \"../../types/TimeEvent\";\n\nexport interface EventsContextValue {\n  events: Array<TimeEvent>;\n  organizers: string[];\n  loading: boolean;\n  filterEventsByName: (name: string | null) => void,\n}\n\nconst EventsContext = React.createContext<EventsContextValue>({\n  events: [],\n  organizers: [],\n  loading: false,\n  filterEventsByName: (name: string | null) => {}\n});\n\nexport default EventsContext;","import { DateTime } from \"luxon\";\nimport { MINUTE_TO_PIXEL_RATIO } from \"../../constants\";\n\nfunction calculateWidth(start: DateTime, end: DateTime) {\n  const minutes = end.diff(start).as(\"minutes\");\n  const width = minutes * MINUTE_TO_PIXEL_RATIO;\n\n  return width;\n}\n\nexport default calculateWidth;","import { DateTime } from \"luxon\";\nimport React from \"react\";\n\nexport interface SelectedTimeContextValue {\n  start: DateTime,\n  end: DateTime,\n  setStart: (value: DateTime) => void,\n  setEnd: (value: DateTime) => void\n}\n\nconst SelectedTimeContext = React.createContext<SelectedTimeContextValue>({\n  start: DateTime.local(),\n  end: DateTime.local(),\n  setStart: () => {},\n  setEnd: () => {}\n});\n\nexport default SelectedTimeContext;","import { DateTime } from \"luxon\";\nimport { MINUTE_TO_PIXEL_RATIO } from \"../../../constants\";\n\ninterface Response {\n    start: DateTime;\n    end: DateTime;\n}\n\nexport function calculateNewInterval(\n    timeLineStart: DateTime,\n    originalStart: DateTime,\n    originalEnd: DateTime,\n    timeLineElement: HTMLDivElement,\n    clickPageXCoordinate: number\n): Response {\n    const originalDuration = originalEnd.diff(originalStart).as(\"minutes\");\n    const timeLineScreenOffset = timeLineElement.getBoundingClientRect().left;\n    const clickTimeLineCoordinate = clickPageXCoordinate - timeLineScreenOffset;\n    const start = timeLineStart.plus({ minutes: clickTimeLineCoordinate / MINUTE_TO_PIXEL_RATIO });\n\n    return {\n        start,\n        end: start.plus({ minutes: originalDuration })\n    }\n}\n\nexport default calculateNewInterval;\n","import React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\nimport EventsContext from '../../contexts/EventsContext/EventsContext';\nimport calculateWidth from '../../generator/utils/calculateWidth';\nimport { last, first } from 'lodash';\nimport SelectedTimeContext from '../../contexts/SelectedTimeContext';\nimport { DateTime } from 'luxon';\nimport { MINUTE_TO_PIXEL_RATIO } from '../../constants';\nimport calculateNewInterval from './utils';\n\ninterface RootProps {\n  width: number;\n}\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-x: auto;\n`;\n\nconst Content = styled.div<RootProps>`\n  position: relative;\n  height: 100px;\n  background: #f0f0f0;\n  width: ${({width}) => width}px;\n`;\n\ninterface TimeLineProps {\n  timeLineStart: DateTime;\n}\n\nconst TimeLine: React.FC<TimeLineProps> = ({ children, timeLineStart }) => {\n  const { events } = useContext(EventsContext);\n  const selectedTime = useContext(SelectedTimeContext);\n  const width = calculateWidth(timeLineStart, DateTime.fromISO(last(events)?.end ?? \"\"));\n  const contentRef = useRef<HTMLDivElement| null>(null);\n\n  const onClick = useCallback((e: React.MouseEvent) => {\n    const { start, end } = calculateNewInterval(timeLineStart, selectedTime.start, selectedTime.end, contentRef.current!, e.clientX);\n\n    selectedTime.setStart(start);\n    selectedTime.setEnd(end);\n  }, [selectedTime])\n\n  return (\n    <Root>\n      <Content ref={contentRef} width={width} onClick={onClick}>{children}</Content>\n    </Root>\n  )\n}\n\nexport default TimeLine;","import axios from \"axios\";\nimport { TimeEvent } from \"../types/TimeEvent\";\n\nfunction fetchEvents() {\n  return axios.get<TimeEvent[]>(`${process.env.PUBLIC_URL}/events.json`);\n}\n\nexport default fetchEvents;","import { useEffect, useMemo, useState } from \"react\";\nimport fetchEvents from \"../../api/fetchEvents\";\nimport { TimeEvent } from \"../../types/TimeEvent\";\nimport EventsContext, { EventsContextValue } from \"./EventsContext\";\n\nconst EventsContextProvider: React.FC = ({ children }) => {\n  const [nameFilter, setNameFilter] = useState<null | string>(null);\n  const [allEvents, setAllEvents] = useState<TimeEvent[]>([]);\n  const [loading, setLoading] = useState(false);\n  const organizers = useMemo(() => {\n    return Array.from(new Set<string>(allEvents.map(event => event.name)))\n  }, [allEvents]);\n\n  const value = useMemo<EventsContextValue>(() => ({\n    loading,\n    organizers,\n    events: nameFilter ? allEvents.filter(event => event.name === nameFilter) : allEvents,\n    filterEventsByName: setNameFilter,\n  }), [allEvents, nameFilter, loading, setNameFilter]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchEvents().then(events => {\n      setAllEvents(events.data)\n      setLoading(false);\n    })   \n  }, []);\n\n\n  return (\n    <EventsContext.Provider value={value}>{children}</EventsContext.Provider>\n  );\n}\n\nexport function withEventsProvider<P>(Component: React.ComponentType<P>): React.FC<P> {\n  return (props: P) => {\n    return (\n      <EventsContextProvider>\n        <Component {...props} />\n      </EventsContextProvider>\n    );\n  }\n}\n\nexport default EventsContextProvider;","import { DateTime } from \"luxon\";\nimport { useMemo, useState } from \"react\";\nimport SelectedTimeContext, { SelectedTimeContextValue } from \"./SelectedTimeContext\";\n\nconst SelectedTimeContextProvider: React.FC = ({ children }) => {\n  const [start, setStart] = useState<DateTime>(DateTime.local());\n  const [end, setEnd] = useState<DateTime>(DateTime.local().plus({ hours: 1 }));\n  const value = useMemo<SelectedTimeContextValue>(() => ({\n    start,\n    end,\n    setStart,\n    setEnd\n  }), [start, end, setStart, setEnd])\n\n  return (\n    <SelectedTimeContext.Provider value={value}>{children}</SelectedTimeContext.Provider>\n  );\n}\n\nexport const withSelectedTimeContextProvider = <P extends Record<string, any>>(Component: React.ComponentType<P>): React.FC<P> => {\n  return (props: P) => (\n    <SelectedTimeContextProvider>\n      <Component {...props} />\n    </SelectedTimeContextProvider>\n  );\n}\n\nexport default SelectedTimeContextProvider;","import { DateTime } from \"luxon\";\nimport { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { MINUTE_TO_PIXEL_RATIO } from \"../../constants\";\nimport EventsContext from \"../../contexts/EventsContext/EventsContext\";\nimport SelectedTimeContext from \"../../contexts/SelectedTimeContext\";\nimport { calculateLeftValue, calculateWidthValue, isIntervalFree } from \"../../utils\";\n\ninterface RootProps {\n  left: number;\n  width: number;\n  free: boolean;\n}\n\nconst Root = styled.div<RootProps>`\n  position: absolute;\n  height: 100%;\n  border-left: 5px solid #585858;\n  border-right: 5px solid #585858;\n  width: ${({ width }) => width}px;\n  left: ${({ left }) => left}px;\n  background:${({ free }) => free ? \"#4CAF50\" : \"#f44336b8\"};\n  z-index: 1;\n  transition: all 170ms ease-in;\n  box-sizing: border-box;\n`;\n\ninterface SelectedTimeProps {\n  timeLineStart: DateTime;\n}\n\nconst SelectedTime: React.FC<SelectedTimeProps> = ({ timeLineStart }) => {\n  const eventsContext = useContext(EventsContext);\n  const selectedTimeContext = useContext(SelectedTimeContext);\n  const left = calculateLeftValue(timeLineStart, selectedTimeContext.start);\n  const width = calculateWidthValue(selectedTimeContext.start, selectedTimeContext.end);\n  const free = isIntervalFree(eventsContext.events, selectedTimeContext.start, selectedTimeContext.end);\n  \n  return (\n    <Root left={left} width={width} free={free}/>\n  )\n};\n\nexport default SelectedTime;","import { isEmpty, last } from \"lodash\";\nimport { DateTime } from \"luxon\";\nimport { Moment } from \"moment\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport EventsContext from \"../../../contexts/EventsContext/EventsContext\";\nimport SelectedTimeContext from \"../../../contexts/SelectedTimeContext\";\ninterface Response {\n  start: DateTime,\n  end: DateTime,\n  nameFilterValue: null | string;\n  nameFilterOptions: Array<string>;\n  onStartChange: (value: Moment | string) => void;\n  onEndChange: (value: Moment | string) => void;\n  onFilterChange: (value: string | null) => void;\n}\n\nfunction useControlsBar(): Response {\n  const [nameFilterValue, setNameFilterValue] = useState<string | null>(null);\n  const { filterEventsByName, organizers } = useContext(EventsContext);\n  const { setEnd, setStart, start, end } = useContext(SelectedTimeContext);\n\n  const onStartChange = useCallback((value: Moment | string) => {\n    setStart(DateTime.fromISO((value as Moment).toISOString()));\n  }, [setStart]);\n\n  const onEndChange = useCallback((value: Moment | string) => {\n    setEnd(DateTime.fromISO((value as Moment).toISOString()));\n  }, [setEnd]);\n\n  const onFilterChange = useCallback((value: string | null) => {\n    setNameFilterValue(value);\n  }, [setNameFilterValue]);\n\n  useEffect(() => {\n    filterEventsByName(isEmpty(nameFilterValue) ? null : nameFilterValue);\n  }, [nameFilterValue]);\n\n  return {\n    start,\n    end,\n    nameFilterValue,\n    nameFilterOptions: organizers,\n    onStartChange,\n    onEndChange,\n    onFilterChange\n  }\n}\n\nexport default useControlsBar;","import { Button, FormControl, InputLabel, MenuItem } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport { DateTime } from 'luxon';\nimport React, { HTMLAttributes, useCallback, useContext } from 'react'\nimport styled from 'styled-components';\nimport useControlsBar from './hooks/useControlBar';\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport { isEmpty } from 'lodash';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledOrganizerField = styled(FormControl)`\n  && {\n    min-width: 200px;\n  }\n`;\n\nconst StyledDateTimeFormControl = styled(FormControl)`\n  && {\n    min-width: 200px;\n\n    .MuiFormLabel-root {\n      flex: 1;\n      position: relative;\n    }\n\n    input {\n      border: none;\n      border-bottom: 1px solid;\n      padding-bottom: 6px;\n    }\n  }\n`;\n\nconst StyledResetButton = styled(Button)`\n  && {\n    margin-left: 1rem;\n  }\n`;\n\ninterface ControlBarProps extends HTMLAttributes<HTMLDivElement> {\n  timeLineStart: DateTime;\n}\n\nconst ControlsBar: React.FC<ControlBarProps> = ({ timeLineStart, ...props }) => {\n  const { start, end, nameFilterOptions, nameFilterValue, onEndChange, onFilterChange, onStartChange } = useControlsBar();\n\n  return (\n    <Root {...props}>\n      <StyledDateTimeFormControl>\n        <InputLabel shrink>Start</InputLabel>\n        <Datetime\n          value={start.toJSDate()}\n          onChange={onStartChange}\n        />\n      </StyledDateTimeFormControl>\n\n      <StyledDateTimeFormControl>\n        <InputLabel shrink>End</InputLabel>\n        <Datetime\n          value={end.toJSDate()}\n          onChange={onEndChange}\n        />\n      </StyledDateTimeFormControl>\n\n      <StyledOrganizerField>\n        <InputLabel shrink>Organizer</InputLabel>\n        <Select\n          value={nameFilterValue}\n          onChange={(e) => { onFilterChange(e.target.value as string)}}\n        >\n          {nameFilterOptions.map((name) => <MenuItem key={name} value={name}>{name}</MenuItem>)}\n        </Select>\n      </StyledOrganizerField>\n      \n      { !isEmpty(nameFilterValue) ? (\n        <StyledResetButton \n          variant=\"contained\" \n          color={\"primary\"} \n          onClick={() => onFilterChange(null)}\n        >\n          Delete filter\n        </StyledResetButton>\n      ) : null}\n    </Root>\n  )\n}\n\nexport default ControlsBar\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as React from \"react\";\nimport { CSSProperties } from \"react\";\nimport styled from \"styled-components\";\n\ninterface LoaderProps {\n\tloading: boolean;\n\topacity?: number;\n\tinline?: boolean;\n}\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 4;\n`;\n\nconst Loader: React.FC<LoaderProps> = ({ loading, opacity, inline = false }) => {\n  if (!loading) return null;\n  \n  const style = {\n    background: opacity ? `rgba(255, 255, 255, ${opacity})` : undefined,\n    minHeight: inline ? \"10rem\" : undefined,\n    minWidth: inline ? \"10rem\" : undefined,\n    position: inline ? \"relative\" : undefined,\n  } as CSSProperties;\n\n  return (\n    <Root style={style}>\n      <CircularProgress />\n    </Root>\n  );\n};\n\nexport default Loader;\n","import React, { useContext, useMemo } from 'react';\nimport { generateEvents } from './generator';\nimport Event from './components/Event'\nimport Timeline from './components/TimeLine';\nimport { withEventsProvider } from './contexts/EventsContext/EventsContextProvider';\nimport { withSelectedTimeContextProvider } from './contexts/SelectedTimeContext/SelectedTimeContextProvider';\nimport SelectedTime from './components/SelectedTime/SelectedTime';\nimport { DateTime } from 'luxon';\nimport EventsContext from './contexts/EventsContext/EventsContext';\nimport ControlsBar from './components/ControlsBar/ControlsBar';\nimport styled from 'styled-components';\nimport Loader from './components/Loader';\n\nconst Root = styled.div`\n  padding: 2rem;\n`;\n\nconst StyledControlBar = styled(ControlsBar)`\n  margin: 2rem 0;\n`;\n\nfunction App() {\n  const { events, loading } = useContext(EventsContext);\n  const timeLineStart = useMemo(() => DateTime.local().set({ minute: 0, hour: 0, second: 0, millisecond: 0 }), []);\n\n  return (\n    <Root className=\"App\">\n      <StyledControlBar timeLineStart={timeLineStart}/>      \n      <Timeline timeLineStart={timeLineStart}>        \n        <Loader loading={loading} />\n        <SelectedTime timeLineStart={timeLineStart} />\n        {\n          events.map(item => (\n            <Event key={item.id} item={item} timeLineStart={timeLineStart}/>\n          ))\n        }      \n      </Timeline>\n    </Root>\n  );\n}\n\nexport default withSelectedTimeContextProvider(withEventsProvider(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}